<%
  prepare = commands(:default).map { |s| "(\n\n#{indent 2, s}\n\n)" }.join(" && ")
  restart = commands(:restart).map { |s| "(\n\n#{indent 2, s}\n\n)" }.join(" && ")
  clean   = commands(:clean).map   { |s| "(\n\n#{indent 2, s}\n\n)" }.join(" && ")
%>
#!/usr/bin/env bash

# Sanity check
if [ ! -d "<%= deploy_to %>" ]; then
  echo "-----> Error: not set up."
  echo "The path '<%= deploy_to %>' is not found on the server."
  echo "You may need to run 'dep setup' first."
  exit 16
fi

# Check lockfile
if [ -e "<%= lock_file %>" ]; then
  echo "-----> ERROR: another deployment is ongoing."
  echo "The file '<%= lock_file %>' was found."
  echo "If no other deployment is ongoing, delete the file to continue."
  exit 17
fi

# Go there
cd "<%= deploy_to %>"

# Determine $previous_path
[ -h "<%= current_path %>" ] && [ -d "<%= current_path %>" ] && previous_path=$(cd "<%= current_path %>" >/dev/null && pwd -LP)
version=$((`cat "<%= deploy_to %>/last_version" 2>/dev/null`+1))
release_path="<%= releases_path %>/$version"

# ============================
# === Sanity check

if [ -e "<%= build_path %>" ]; then
  echo "-----> ERROR: Path already exists"
  echo "The path '<%= build_path %>' already exists."
  echo "You may have to delete it first."
  exit 18
fi

echo "-----> Deploying"

# Lock
touch "<%= lock_file %>"

# ============================
# === Bootstrap script (in deployer)
(
  mkdir -p "<%= build_path %>" &&
  cd "<%= build_path %>" &&
  (
<%= indent 4, (prepare.empty? ? "true" : prepare) %>
  )
) &&

# ============================
# === Rename to the real release path, then symlink 'current'
(
  echo "-----> Build finished (<%= releases_path.gsub(deploy_to, '.').squeeze('/') %>/$version)"
  echo "-----> Symlinking <%= current_path.gsub(deploy_to, '.').squeeze('/') %>"
  mv "<%= build_path %>" "$release_path"
  rm -f "<%= current_path %>"
  ln -s "$release_path" "<%= current_path %>"
) &&

# ============================
# === Start up server (in deployer)
(
  echo "-----> Launching"
<%= indent 2, (restart.empty? ? "true" : restart) %>
) &&

# ============================
# === Complete & unlock
(
  rm -f "<%= lock_file %>"
  echo "$version" > "<%= deploy_to %>/last_version"
  echo "-----> Done. Deployed v$version"
) ||

# ============================
# === Failed deployment
(
  echo "-----> ERROR: Deploy failed."

<%= indent 2, clean %>

  echo -n "-----> Cleaning up build... "
  [ -e "<%= build_path %>" ] && (
    echo -n "deleting, "
    rm -rf "<%= build_path %>"
  )
  (
    echo -n "unlinking, "
    rm -f "<%= current_path %>"
    [ -n "$previous_path" ] && ln -s "$previous_path" "<%= current_path %>"
  )
  echo "OK"

  # Unlock
  rm -f "<%= lock_file %>"
  exit 8
)
